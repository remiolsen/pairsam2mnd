#!/usr/bin/env python
from __future__ import print_function
import argparse
import os, sys

VALID_TYPES = ["uu", "ur", "ru"]

def orientation(field):

    if field == "+":
        return "0"
    elif field == "-":
        return "1"
    else:
        raise Exception("Could not parse read orientation")

def get_mndfields(args):

    for line in args.infile:
        if line.startswith("#"):
            continue
        parts = line.split("\x19NEXT_SAM\x19")
        if len(parts) < 2:
            continue
        
        pairs = parts[0].split("\t")[:-1]
        sam1 = parts[0].split("\t")[-1].strip().split("\x19")
        sam2 = parts[1].strip().split("\x19")

        pairtype = pairs[7].lower()
        if not args.allpairs and pairtype not in VALID_TYPES:
            continue
        try: 
            # https://github.com/aidenlab/juicer/wiki/Pre#long-format       
            outl = [orientation(pairs[5]),  # <str1>
                    pairs[1],               # <chr1> 
                    pairs[2],               # <pos1>
                    "0",                      # <frag1> Dummy value
                    orientation(pairs[6]),  # <str2>
                    pairs[3],               # <chr2> 
                    pairs[4],               # <pos2>  
                    "1",                      # <frag2> Dummy value
                    sam1[4],                # <mapq1>
                    sam1[5],                # <cigar1>
                    sam1[9],                # <sequence1>
                    sam2[4],                # <mapq2>
                    sam2[5],                # <cigar2>
                    sam2[9],                # <sequence2>
                    sam1[0],                # <readname1>
                    sam2[0]                 # <readname2>
            ]
            args.outfile.write("\t".join(outl)+"\n")
        except Exception as e:
            print(parts)
            raise e

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Convert pairsam file generated by pairtools to merged_nodups format. "
                "Typical use, 'pigz -d -c -t 4 pairsam.gz | pairsam2mnd.py -t 4 > merged_nodups.txt'")
    parser.add_argument('infile', nargs='?', type=argparse.FileType('r'),
                        default=sys.stdin)
    parser.add_argument('outfile', nargs='?', type=argparse.FileType('w'),
                        default=sys.stdout)
    parser.add_argument('-a', '--allpairs', action='store_true', help="By default this program will only output valid pairs, use '-a' to disable this behavior")
    args = parser.parse_args()
    get_mndfields(args)
